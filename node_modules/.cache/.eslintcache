[{"D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\index.js":"1","D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\App.js":"2","D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\NavBar.js":"3","D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\Home.js":"4","D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\CropRecommender.js":"5","D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\FertilizerRecommender.js":"6","D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\MenuList.js":"7","D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\Loading.js":"8","D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\Data.js":"9","D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\api\\recommenderapi.js":"10","D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\Footer.js":"11","D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\Banner1.js":"12","D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\Banner2.js":"13","D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\Banner3.js":"14","D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\index.js":"15","D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\App.js":"16","D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\components\\FertilizerRecommender.js":"17","D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\components\\CropRecommender.js":"18","D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\components\\Home.js":"19","D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\components\\NavBar.js":"20","D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\components\\Footer.js":"21","D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\components\\Banner2.js":"22","D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\api\\recommenderapi.js":"23","D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\components\\MenuList.js":"24","D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\components\\Banner3.js":"25","D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\components\\Banner1.js":"26"},{"size":218,"mtime":1620670192000,"results":"27","hashOfConfig":"28"},{"size":771,"mtime":1669791497315,"results":"29","hashOfConfig":"28"},{"size":1213,"mtime":1669734643600,"results":"30","hashOfConfig":"28"},{"size":310,"mtime":1669791471252,"results":"31","hashOfConfig":"28"},{"size":3199,"mtime":1669816333312,"results":"32","hashOfConfig":"28"},{"size":5564,"mtime":1669814058701,"results":"33","hashOfConfig":"28"},{"size":326,"mtime":1669738935309,"results":"34","hashOfConfig":"28"},{"size":346,"mtime":1620670192000,"results":"35","hashOfConfig":"28"},{"size":20920,"mtime":1620670192000,"results":"36","hashOfConfig":"28"},{"size":168,"mtime":1620670192000,"results":"37","hashOfConfig":"28"},{"size":2198,"mtime":1669827524381,"results":"38","hashOfConfig":"28"},{"size":853,"mtime":1669806897467,"results":"39","hashOfConfig":"28"},{"size":505,"mtime":1669785421142,"results":"40","hashOfConfig":"28"},{"size":1129,"mtime":1669816736632,"results":"41","hashOfConfig":"28"},{"size":218,"mtime":1620670192000,"results":"42","hashOfConfig":"43"},{"size":771,"mtime":1669791497315,"results":"44","hashOfConfig":"43"},{"size":5564,"mtime":1670778653305,"results":"45","hashOfConfig":"43"},{"size":3199,"mtime":1670778656208,"results":"46","hashOfConfig":"43"},{"size":310,"mtime":1669791471252,"results":"47","hashOfConfig":"43"},{"size":1213,"mtime":1669734643600,"results":"48","hashOfConfig":"43"},{"size":2198,"mtime":1669827524381,"results":"49","hashOfConfig":"43"},{"size":505,"mtime":1669785421142,"results":"50","hashOfConfig":"43"},{"size":168,"mtime":1620670192000,"results":"51","hashOfConfig":"43"},{"size":326,"mtime":1669738935309,"results":"52","hashOfConfig":"43"},{"size":1129,"mtime":1669816736632,"results":"53","hashOfConfig":"43"},{"size":853,"mtime":1669806897467,"results":"54","hashOfConfig":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"192j21z",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kruqdl",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\index.js",[],["112","113"],"D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\App.js",[],"D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\NavBar.js",[],"D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\Home.js",[],"D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\CropRecommender.js",["114"],"import React, { useState } from 'react'\nimport { Button, TextField } from '@material-ui/core';\nimport api from \"../api/recommenderapi\"\nimport Alert from '@material-ui/lab/Alert';\n\n\nfunction CropRecommender() {\n\n    const [formData, setFormData] = useState({\n        N:\"\",\n        P:\"\",\n        K:\"\",\n        temperature:\"\",\n        humidity:\"\",\n        ph:\"\",\n        rainfall:\"\"\n    })\n\n    const [predictionData, setPredictionData] = useState({})\n\n    const [loadingStatus, setLoadingStatus] = useState(false)\n\n    const handleChange = (e) => {\n        let newData = {...formData}\n        newData[e.target.id] = e.target.value\n        setFormData(newData)\n    }\n\n    const handleClick = async () => {\n\n        setLoadingStatus(true)\n        \n        const request = new FormData()\n\n        for(let key in formData) {\n            request.append(key, formData[key])\n        }\n\n        const response = await api.post(\n            \"/predict_crop\",\n            request\n        )\n        \n        const responseData = response.data\n        setPredictionData(responseData)\n        setLoadingStatus(false)\n    }\n\n\n\n    return (\n        <div style={{backgroundImage:`url(${process.env.PUBLIC_URL + 'assets/CropRecomender.jpg'})`}} className=\"container\">\n            <div className=\"form\">\n                <div className=\"form__form_group\">\n\n                    {\n                        predictionData.error && \n                        <Alert style={{marginTop:\"20px\"}} severity=\"error\"> { predictionData.error } </Alert>\n                    }\n\n                    <center><div className=\"form__title\">Crop Recommender</div></center>\n                    <TextField onChange={(e) => handleChange(e)} value={formData.N} className=\"form__text_field\" id=\"N\" name=\"N\" variant=\"filled\" label=\"Amount of Nitrogen in Soil\" />\n                    <TextField onChange={(e) => handleChange(e)} value={formData.P} className=\"form__text_field\" id=\"P\" name=\"P\" variant=\"filled\" label=\"Amount of Phosphorous in Soil\" />\n                    <TextField onChange={(e) => handleChange(e)} value={formData.K} className=\"form__text_field\" id=\"K\" name=\"K\" variant=\"filled\" label=\"Amount of Pottasium in Soil\" />\n                    <TextField onChange={(e) => handleChange(e)} value={formData.temperature} className=\"form__text_field\" id=\"temperature\" name=\"temperature\" variant=\"filled\" label=\"Temperature (in Celcius)\" />\n                    <TextField onChange={(e) => handleChange(e)} value={formData.humidity} className=\"form__text_field\" id=\"humidity\" name=\"humidity\" variant=\"filled\" label=\"Humidity (in %)\" />\n                    <TextField onChange={(e) => handleChange(e)} value={formData.ph} className=\"form__text_field\" id=\"ph\" name=\"ph\" variant=\"filled\" label=\"pH value of Soil\" />\n                    <TextField onChange={(e) => handleChange(e)} value={formData.rainfall} className=\"form__text_field\" id=\"rainfall\" name=\"rainfall\" variant=\"filled\" label=\"Rainfall (in mm)\" />\n\n                    <Button onClick={()=>handleClick()} className=\"form__button\" color=\"primary\" variant=\"contained\">Predict Crop</Button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CropRecommender\n","D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\FertilizerRecommender.js",["115"],"import React, { useState } from 'react'\nimport { Button, TextField } from '@material-ui/core';\nimport api from \"../api/recommenderapi\"\nimport Alert from '@material-ui/lab/Alert';\nimport \"../styles/croprecommenderoutput.css\"\n\nfunction FertilizerRecommender() {\n    const [formData, setFormData] = useState({\n        Temparature:\"\",\n        Humidity:\"\",\n        Moisture:\"\",\n        soil_type:\"select\",\n        crop_type:\"select\",\n        Nitrogen:\"\",\n        Potassium:\"\",\n        Phosphorous:\"\",\n    })\n\n    const [predictionData, setPredictionData] = useState({})\n\n    const [loadingStatus, setLoadingStatus] = useState(false)\n    \n\n    const formRenderData = [\n        {\n           name:\"Nitrogen\",\n           description:\"Amount Of Nitrogen in Soil\"\n        },\n        {\n            name:\"Potassium\",\n            description:\"Amount of Potassium in Soil\"\n         },\n         {\n            name:\"Phosphorous\",\n            description:\"Amount of Phosphorous in Soil\"\n         },\n         {\n            name:\"Temparature\",\n            description:\"Temperature (in Celcius)\"\n         },\n         {\n            name:\"Humidity\",\n            description:\"Humidity (in %)\"\n         },\n         {\n            name:\"Moisture\",\n            description:\"Moisture in Soil\"\n         }\n    ]\n\n    const soilTypes = ['Sandy', 'Loamy', 'Black', 'Red', 'Clayey']\n    const cropTypes = ['Maize', 'Sugarcane', 'Cotton', 'Tobacco', 'Paddy', 'Barley', 'Wheat', 'Millets', 'Oil seeds', 'Pulses', 'Ground Nuts']\n\n    const handleChange = (e, changeKey=undefined) => {\n        // console.log(changeKey, e.target.value)\n        let newData = {...formData}\n        if(changeKey) {\n            newData[changeKey] = e.target.value\n        }\n        else newData[e.target.id] = e.target.value\n        setFormData(newData)\n    }\n\n    const handleClick = async () => {\n\n        setLoadingStatus(true)\n        \n        const request = new FormData()\n\n        for(let key in formData) {\n            request.append(key, formData[key])\n        }\n\n        const response = await api.post(\n            \"/predict_fertilizer\",\n            request\n        )\n        \n        const responseData = response.data\n        setPredictionData(responseData)\n        setLoadingStatus(false)\n    }\n\n    \n    return (\n        <div style={{backgroundImage:`url(${process.env.PUBLIC_URL + 'assets/FertilizerRecomender.jpg'})`}} className=\"container\">\n            <div className=\"form\">\n                <div className=\"form__form_group\">\n\n                    {\n                        predictionData.error && \n                        <Alert style={{marginTop:\"20px\"}} severity=\"error\"> { predictionData.error } </Alert>\n                    }\n\n                    <center><div className=\"form__title\">Fertilizer Recommender</div></center>\n\n                    {\n                        formRenderData.map((formAttribute) => {\n                            return <TextField\n                            key={formAttribute.name} \n                            onChange={(e) => handleChange(e)}\n                            value={formData[formAttribute.name]}\n                            className=\"form__text_field\"\n                            id={formAttribute.name}\n                            name={formAttribute.name}\n                            variant=\"filled\"\n                            label={formAttribute.description}\n                            />\n                        })\n                    }\n\n\n                    <TextField\n                        id=\"soil_type\"\n                        name=\"soil_type\"\n                        select\n                        label=\"Soil Type\"\n                        value={formData.soil_type}\n                        onChange={(e) => handleChange(e, \"soil_type\")}\n                        SelectProps={{\n                            native: true,\n                        }}\n                        variant=\"filled\"\n                        className=\"form__text_field\"\n                        >\n                        <option key={\"select\"} value={\"select\"}>\n                        {\"Select\"}\n                        </option>\n                        {soilTypes.map((soiltype) => (\n                            <option key={soiltype} value={soiltype}>\n                            {soiltype}\n                            </option>\n                        ))}\n                    </TextField>\n\n\n                    <TextField\n                        id=\"soil_type\"\n                        name=\"soil_type\"\n                        select\n                        label=\"Crop Type\"\n                        value={formData.crop_type}\n                        onChange={(e) => handleChange(e, \"crop_type\")}\n                        SelectProps={{\n                            native: true,\n                        }}\n                        variant=\"filled\"\n                        className=\"form__text_field\"\n                        >\n                        <option key={\"select\"} value={\"select\"}>\n                        {\"Select\"}\n                        </option>\n                        {cropTypes.map((croptype) => (\n                            <option key={croptype} value={croptype}>\n                            {croptype}\n                            </option>\n                        ))}\n                    </TextField>\n\n                    <Button onClick={()=>handleClick()} className=\"form__button\" color=\"primary\" variant=\"contained\">Predict Fertilizer</Button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FertilizerRecommender\n","D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\MenuList.js",[],"D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\Loading.js",[],["116","117"],"D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\Data.js",[],"D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\api\\recommenderapi.js",[],"D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\Footer.js",[],"D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\Banner1.js",[],"D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\Banner2.js",[],"D:\\IIT\\Subjects\\DSGP Project\\React\\AgriAI_WebApp-main-2\\AgriAI_WebApp-main\\React_Frontend\\agri-ai\\src\\components\\Banner3.js",[],"D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\index.js",[],"D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\App.js",[],"D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\components\\FertilizerRecommender.js",["118"],"D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\components\\CropRecommender.js",["119"],"D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\components\\Home.js",[],"D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\components\\NavBar.js",[],"D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\components\\Footer.js",[],"D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\components\\Banner2.js",[],"D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\api\\recommenderapi.js",[],["120","121"],"D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\components\\MenuList.js",[],"D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\components\\Banner3.js",[],"D:\\IIT\\Subjects\\DSGP Project\\DSGP\\Frontend\\src\\components\\Banner1.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":21,"column":12,"nodeType":"128","messageId":"129","endLine":21,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":21,"column":12,"nodeType":"128","messageId":"129","endLine":21,"endColumn":25},{"ruleId":"122","replacedBy":"130"},{"ruleId":"124","replacedBy":"131"},{"ruleId":"126","severity":1,"message":"127","line":21,"column":12,"nodeType":"128","messageId":"129","endLine":21,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":21,"column":12,"nodeType":"128","messageId":"129","endLine":21,"endColumn":25},{"ruleId":"122","replacedBy":"132"},{"ruleId":"124","replacedBy":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'loadingStatus' is assigned a value but never used.","Identifier","unusedVar",["134"],["135"],["134"],["135"],"no-global-assign","no-unsafe-negation"]