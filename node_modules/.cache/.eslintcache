[{"D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\index.js":"1","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\App.js":"2","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\NavBar.js":"3","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\Home.js":"4","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\FertilizerRecommender.js":"5","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\CropRecommender.js":"6","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\Footer.js":"7","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\WhatWeDo.js":"8","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\AgriAdvice.js":"9","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\AboutUs.js":"10","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\TalkToUs.js":"11","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\SignIn.js":"12","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\MenuList.js":"13","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\Banner1.js":"14","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\Banner2.js":"15","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\SignInComponents.js":"16","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\api\\recommenderapi.js":"17","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\Data.js":"18","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\Loading.js":"19"},{"size":228,"mtime":1680622685956,"results":"20","hashOfConfig":"21"},{"size":1354,"mtime":1680622685682,"results":"22","hashOfConfig":"21"},{"size":1257,"mtime":1680622685706,"results":"23","hashOfConfig":"21"},{"size":268,"mtime":1680622685703,"results":"24","hashOfConfig":"21"},{"size":5014,"mtime":1680625948569,"results":"25","hashOfConfig":"21"},{"size":3418,"mtime":1680625909117,"results":"26","hashOfConfig":"21"},{"size":2564,"mtime":1680622685702,"results":"27","hashOfConfig":"21"},{"size":2969,"mtime":1680625462963,"results":"28","hashOfConfig":"21"},{"size":2330,"mtime":1680622685685,"results":"29","hashOfConfig":"21"},{"size":3860,"mtime":1680625192379,"results":"30","hashOfConfig":"21"},{"size":3175,"mtime":1680622685709,"results":"31","hashOfConfig":"21"},{"size":3018,"mtime":1680622685707,"results":"32","hashOfConfig":"21"},{"size":279,"mtime":1680622685706,"results":"33","hashOfConfig":"21"},{"size":1612,"mtime":1680625651782,"results":"34","hashOfConfig":"21"},{"size":3299,"mtime":1680622685697,"results":"35","hashOfConfig":"21"},{"size":3612,"mtime":1680622685708,"results":"36","hashOfConfig":"21"},{"size":160,"mtime":1680622685684,"results":"37","hashOfConfig":"21"},{"size":21103,"mtime":1680622685699,"results":"38","hashOfConfig":"21"},{"size":522,"mtime":1680625762503,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hhn26u",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\index.js",[],"D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\App.js",[],"D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\NavBar.js",[],"D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\Home.js",[],"D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\FertilizerRecommender.js",["83"],"import React, { useState } from \"react\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport api from \"../api/recommenderapi\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport \"../styles/croprecommenderoutput.css\";\r\n\r\nfunction FertilizerRecommender() {\r\n  const [formData, setFormData] = useState({\r\n    Temparature: \"\",\r\n    Humidity: \"\",\r\n    Moisture: \"\",\r\n    soil_type: \"select\",\r\n    crop_type: \"select\",\r\n    Nitrogen: \"\",\r\n    Potassium: \"\",\r\n    Phosphorous: \"\",\r\n  });\r\n\r\n  const [predictionData, setPredictionData] = useState(null);\r\n\r\n  const [loadingStatus, setLoadingStatus] = useState(false);\r\n\r\n  const formRenderData = [\r\n    {\r\n      name: \"Nitrogen\",\r\n      description: \"Amount Of Nitrogen in Soil\",\r\n    },\r\n    {\r\n      name: \"Potassium\",\r\n      description: \"Amount of Potassium in Soil\",\r\n    },\r\n    {\r\n      name: \"Phosphorous\",\r\n      description: \"Amount of Phosphorous in Soil\",\r\n    },\r\n    {\r\n      name: \"Temparature\",\r\n      description: \"Temperature (in Celcius)\",\r\n    },\r\n    {\r\n      name: \"Humidity\",\r\n      description: \"Humidity (in %)\",\r\n    },\r\n    {\r\n      name: \"Moisture\",\r\n      description: \"Moisture in Soil\",\r\n    },\r\n  ];\r\n\r\n  const soilTypes = [\"Sandy\", \"Loamy\", \"Black\", \"Red\", \"Clayey\"];\r\n  const cropTypes = [\r\n    \"Maize\",\r\n    \"Sugarcane\",\r\n    \"Cotton\",\r\n    \"Tobacco\",\r\n    \"Paddy\",\r\n    \"Barley\",\r\n    \"Wheat\",\r\n    \"Millets\",\r\n    \"Oil seeds\",\r\n    \"Pulses\",\r\n    \"Ground Nuts\",\r\n  ];\r\n\r\n  const handleChange = (e, changeKey = undefined) => {\r\n    // console.log(changeKey, e.target.value)\r\n    let newData = { ...formData };\r\n    if (changeKey) {\r\n      newData[changeKey] = e.target.value;\r\n    } else newData[e.target.id] = e.target.value;\r\n    setFormData(newData);\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    setLoadingStatus(true);\r\n\r\n    const request = new FormData();\r\n\r\n    for (let key in formData) {\r\n      request.append(key, formData[key]);\r\n    }\r\n\r\n    console.log(formData)\r\n\r\n    const response = await api.post(\"/fertilizer\", formData);\r\n\r\n    const responseData = response.data;\r\n    setPredictionData(responseData);\r\n    setLoadingStatus(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url(${\r\n          process.env.PUBLIC_URL + \"assets/FertilizerRecomender.jpg\"\r\n        })`,\r\n      }}\r\n      className=\"container\"\r\n    >\r\n      <div className=\"form\">\r\n        <div className=\"form__form_group\">\r\n          {predictionData && (\r\n            <Alert style={{ marginTop: \"20px\" }} >\r\n\r\n              {predictionData.crop}\r\n\r\n               {predictionData.fertilizer}\r\n            </Alert>\r\n          )}\r\n\r\n          <center>\r\n            <div className=\"form__title\">Fertilizer Recommender</div>\r\n          </center>\r\n\r\n          {formRenderData.map((formAttribute) => {\r\n            return (\r\n              <TextField\r\n                key={formAttribute.name}\r\n                onChange={(e) => handleChange(e)}\r\n                value={formData[formAttribute.name]}\r\n                className=\"form__text_field\"\r\n                id={formAttribute.name}\r\n                name={formAttribute.name}\r\n                variant=\"filled\"\r\n                label={formAttribute.description}\r\n              />\r\n            );\r\n          })}\r\n\r\n          <TextField\r\n            id=\"soil_type\"\r\n            name=\"soil_type\"\r\n            select\r\n            label=\"Soil Type\"\r\n            value={formData.soil_type}\r\n            onChange={(e) => handleChange(e, \"soil_type\")}\r\n            SelectProps={{\r\n              native: true,\r\n            }}\r\n            variant=\"filled\"\r\n            className=\"form__text_field\"\r\n          >\r\n            <option key={\"select\"} value={\"select\"}>\r\n              {\"Select\"}\r\n            </option>\r\n            {soilTypes.map((soiltype) => (\r\n              <option key={soiltype} value={soiltype}>\r\n                {soiltype}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n\r\n          <TextField\r\n            id=\"crop_type\"\r\n            name=\"crop_type\"\r\n            select\r\n            label=\"Crop Type\"\r\n            value={formData.crop_type}\r\n            onChange={(e) => handleChange(e, \"crop_type\")}\r\n            SelectProps={{\r\n              native: true,\r\n            }}\r\n            variant=\"filled\"\r\n            className=\"form__text_field\"\r\n          >\r\n            <option key={\"select\"} value={\"select\"}>\r\n              {\"Select\"}\r\n            </option>\r\n            {cropTypes.map((croptype) => (\r\n              <option key={croptype} value={croptype}>\r\n                {croptype}\r\n              </option>\r\n            ))}\r\n          </TextField>\r\n\r\n          <Button\r\n            onClick={() => handleClick()}\r\n            className=\"form__button\"\r\n            style={{backgroundColor: '#077329'}}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Predict Fertilizer\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FertilizerRecommender;\r\n","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\CropRecommender.js",["84"],"import React, { useState } from 'react'\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport api from \"../api/recommenderapi\"\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nfunction CropRecommender() {\r\n\r\n    const [formData, setFormData] = useState({\r\n        N:\"\",\r\n        P:\"\",\r\n        K:\"\",\r\n        temperature:\"\",\r\n        humidity:\"\",\r\n        ph:\"\",\r\n        rainfall:\"\"\r\n    })\r\n\r\n    const [predictionData, setPredictionData] = useState(null)\r\n\r\n    const [loadingStatus, setLoadingStatus] = useState(false)\r\n\r\n    const handleChange = (e) => {\r\n        let newData = {...formData}\r\n        newData[e.target.id] = e.target.value\r\n        setFormData(newData)\r\n    }\r\n\r\n    const handleClick = async () => {\r\n\r\n        setLoadingStatus(true)\r\n        \r\n        const request = new FormData()\r\n\r\n        for(let key in formData) {\r\n            request.append(key, formData[key])\r\n        }\r\n\r\n        console.log(request);\r\n        console.log(\"formData:\", formData);\r\n\r\n        const response = await api.post(\"/crop\", formData)\r\n        \r\n        const responseData = response.data\r\n        setPredictionData(responseData)\r\n        setLoadingStatus(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={{backgroundImage:`url(${process.env.PUBLIC_URL + 'assets/CropRecomender.jpg'})`}} className=\"container\">\r\n            <div className=\"form\">\r\n                <div className=\"form__form_group\">\r\n\r\n                    {\r\n                        predictionData && \r\n                        <Alert style={{marginTop:\"20px\"}} > { predictionData.crop } </Alert>\r\n                    }\r\n\r\n                    <center><div className=\"form__title\">Crop Recommender</div></center>\r\n                    <TextField onChange={(e) => handleChange(e)} value={formData.N} className=\"form__text_field\" id=\"N\" name=\"N\" variant=\"filled\" label=\"Amount of Nitrogen in Soil\" type=\"number\" />\r\n                    <TextField onChange={(e) => handleChange(e)} value={formData.P} className=\"form__text_field\" id=\"P\" name=\"P\" variant=\"filled\" label=\"Amount of Phosphorous in Soil\" type=\"number\"/>\r\n                    <TextField onChange={(e) => handleChange(e)} value={formData.K} className=\"form__text_field\" id=\"K\" name=\"K\" variant=\"filled\" label=\"Amount of Pottasium in Soil\" type=\"number\"/>\r\n                    <TextField onChange={(e) => handleChange(e)} value={formData.temperature} className=\"form__text_field\" id=\"temperature\" name=\"temperature\" variant=\"filled\" label=\"Temperature (in Celcius)\" type=\"number\"/>\r\n                    <TextField onChange={(e) => handleChange(e)} value={formData.humidity} className=\"form__text_field\" id=\"humidity\" name=\"humidity\" variant=\"filled\" label=\"Humidity (in %)\" type=\"number\"/>\r\n                    <TextField onChange={(e) => handleChange(e)} value={formData.ph} className=\"form__text_field\" id=\"ph\" name=\"ph\" variant=\"filled\" label=\"pH value of Soil\" type=\"number\"/>\r\n                    <TextField onChange={(e) => handleChange(e)} value={formData.rainfall} className=\"form__text_field\" id=\"rainfall\" name=\"rainfall\" variant=\"filled\" label=\"Rainfall (in mm)\" type=\"number\"/>\r\n\r\n                    <Button onClick={()=>handleClick()} className=\"form__button\" style={{backgroundColor: '#077329'}} color=\"primary\" variant=\"contained\">Predict Crop</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CropRecommender\r\n","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\Footer.js",[],"D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\WhatWeDo.js",[],"D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\AgriAdvice.js",["85"],"import React from 'react';\r\nimport { useState, createRef } from 'react';\r\nimport \"../styles/AgriAdvice.css\"\r\n\r\nconst Advice = () => {\r\n  const [model, setModel] = useState(false);\r\n  let data = [\r\n    {\r\n      id: 1,\r\n      // poster: '',\r\n      videoUrl: 'https://www.youtube.com/embed/jOv9JGGPhoQ',\r\n    },\r\n    {\r\n      id: 2,\r\n      // poster: '',\r\n      videoUrl: 'https://www.youtube.com/embed/qkqtcXuogu4',\r\n    \r\n    },\r\n    {\r\n      id: 3,\r\n      // poster: '',\r\n      videoUrl: 'https://www.youtube.com/embed/415an1V0FxQ',\r\n    },\r\n    {\r\n      id: 4,\r\n      // poster: '',\r\n      videoUrl: 'https://www.youtube.com/embed/uljlDOjeb8I',\r\n    },\r\n    {\r\n      id: 5,\r\n      // poster: '',\r\n      videoUrl: 'https://www.youtube.com/embed/fRlUhUWS0Hk',\r\n    },\r\n    {\r\n      id: 6,\r\n      // poster: '',\r\n      videoUrl: 'https://www.youtube.com/embed/I8ChfxcZG9U',\r\n    }\r\n  ]\r\n  return (\r\n    <div style={{backgroundImage:`url(${process.env.PUBLIC_URL + 'assets/B7.jpg'})`}} className=\"TalkToUsContainer\">\r\n      <h1 style={{textAlign: 'center'}}>Video Gallery</h1>\r\n      <div className='gallery'>\r\n        {data.map((item, index)=>{\r\n            let divRef = createRef(null);\r\n            const openMdel = () => {\r\n              divRef.current.classList.remove('video');\r\n              divRef.current.classList.add('model');\r\n              setModel(true);\r\n            }\r\n            const closeMdel = () => {\r\n              divRef.current.classList.add('video');\r\n              divRef.current.classList.remove('model');\r\n              setModel(false);\r\n            }\r\n            return(\r\n              <div ref={divRef} className='video' key={index}>\r\n                {model && <button className='model-close-btn' onClick={()=>closeMdel()}>X</button>}\r\n                <div className='video-container' onClick={()=>openMdel()}>\r\n                  <iframe height={'250px'}\r\n                    autoPlay\r\n                    style={{width: '100%'}}\r\n                    type=\"video/mp4\"\r\n                    controls={['PlayPause', 'Seek', 'Time', 'Volume', 'Fullscreen']}\r\n                    allowFullScreen\r\n                    src = {item.videoUrl} >\r\n                  </iframe> \r\n                </div>\r\n              </div>\r\n            )\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Advice;","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\AboutUs.js",[],"D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\TalkToUs.js",["86"],"import React,{Fragment} from 'react'\r\nimport \"../styles/TalkToUs.css\"\r\n\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div style={{backgroundImage:`url(${process.env.PUBLIC_URL + 'assets/B7.jpg'})`}} className=\"TalkToUsContainer\">\r\n      <Fragment>\r\n        <section className='contact'>\r\n          <div className='contact-heading'>\r\n            <h2>Talk To Us</h2>\r\n          </div>\r\n\r\n          <div className='talk-container'>\r\n            <div className='row'>\r\n              <div className='column'>\r\n                <div className='contact-widget'>\r\n\r\n                  <div className='contact-widget-item'>\r\n                    <div className='icon-talk'>\r\n                      <i class='fas fa-map-marker-alt'></i>\r\n                    </div>\r\n                    <div className='text'>\r\n                      <h3>Address</h3>\r\n                      <p>123 Main Street, Anytown SL</p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='contact-widget-item'>\r\n                    <div className='icon-talk'>\r\n                      <i class='fas fa-phone'></i>\r\n                    </div>\r\n                    <div className='text'>\r\n                      <h3>Contact Us</h3>\r\n                      <p>+94 123 456 7890</p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='contact-widget-item'>\r\n                    <div className='icon-talk'>\r\n                      <i class='fas fa-envelope'></i>\r\n                    </div>\r\n                    <div className='text'>\r\n                      <h3>Mail</h3>\r\n                      <p>info@agromatics.com</p>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                </div>\r\n\r\n                <div className='column'>\r\n                  <div className='contact-form'>\r\n                    <form action='#'>\r\n                      <input type='text' placeholder='Name' />\r\n                      <input type='email' placeholder='Email' />\r\n                      <textarea placeholder='Comment'></textarea>\r\n                      <button type='submit' className='site-btn'> Send Message </button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n\r\n              \r\n            </div>\r\n\r\n            <div className='row'>\r\n              <div className='map-column'>\r\n                <div className='contact-map'>\r\n                <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3961.21123402388!2d79.8598505!3d6.8652714999999995!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3ae25ba4e617b3d9%3A0xd5a3b0418f1cf497!2sInformatics%20Institute%20of%20Technology%20(IIT)!5e0!3m2!1sen!2slk!4v1676782862172!5m2!1sen!2slk\" \r\n                  width=\"600\" \r\n                  height=\"450\" \r\n                  style={{border:0}}\r\n                  allowfullscreen=\"\" \r\n                  loading=\"lazy\" \r\n                  referrerpolicy=\"no-referrer-when-downgrade\">\r\n                </iframe>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </Fragment>\r\n    </div>\r\n  )\r\n}\r\nexport default Contact;","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\SignIn.js",[],"D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\MenuList.js",[],"D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\Banner1.js",["87"],"import React, { useState, useEffect } from 'react';\r\nimport \"../styles/Banner1.css\"\r\n\r\nconst images = [\r\n    \"assets/B2.jpg\",\r\n    \"assets/B1.jpg\",\r\n    \"assets/B3.jpg\",\r\n    \"assets/B6.jpg\",\r\n    \"assets/B7.jpg\",\r\n    \"assets/B8.jpg\",\r\n    \"assets/B9.jpg\",\r\n    \"assets/B10.jpg\"\r\n  ];\r\n\r\nconst Banner = () => {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setIndex(i => (i + 1) % images.length);\r\n    }, 5000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url(${images[index]})`,\r\n        height: '600px',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        filter: 'brightness(0.65)'\r\n      }}\r\n    >\r\n        <div className=\"banner\">\r\n            <div className=\"banner__title\">\r\n                <div className=\"banner__title_head\">\r\n                    <img className=\"banner1_logo_image\" src={`${process.env.PUBLIC_URL + '/assets/LOGO.png'}`} alt=\"Logo\" style={{filter: 'brightness(1.5)'}} style={{filter: 'drop-shadow(0 0 10px rgba(0, 0, 0, 0.8))'}} /><br></br>\r\n                    AGRO<font  style={{filter: 'brightness(1.3)'}}>MATICS</font>\r\n                </div>\r\n                <div className=\"banner__title_tail\"  style={{filter: 'brightness(1.5)'}}>\r\n                    <div className=\"typing\">Web based Crop Prediction and Fertilizer Recommendation Application</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\Banner2.js",[],"D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\SignInComponents.js",[],"D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\api\\recommenderapi.js",[],"D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\Data.js",[],"D:\\IIT\\Subjects\\DSGP Project\\All in One\\DSGP_Group02-\\src\\components\\Loading.js",[],{"ruleId":"88","severity":1,"message":"89","line":21,"column":10,"nodeType":"90","messageId":"91","endLine":21,"endColumn":23},{"ruleId":"88","severity":1,"message":"89","line":21,"column":12,"nodeType":"90","messageId":"91","endLine":21,"endColumn":25},{"ruleId":"92","severity":1,"message":"93","line":60,"column":19,"nodeType":"94","endLine":66,"endColumn":44},{"ruleId":"92","severity":1,"message":"93","line":69,"column":17,"nodeType":"94","endLine":75,"endColumn":63},{"ruleId":"95","severity":1,"message":"96","line":39,"column":159,"nodeType":"97","messageId":"98","endLine":39,"endColumn":219},"no-unused-vars","'loadingStatus' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps"]