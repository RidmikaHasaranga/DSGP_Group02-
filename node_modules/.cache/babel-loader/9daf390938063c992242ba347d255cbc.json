{"ast":null,"code":"var _jsxFileName = \"D:\\\\IIT\\\\Subjects\\\\DSGP Project\\\\React\\\\AgriAI_WebApp-main-2\\\\AgriAI_WebApp-main\\\\React_Frontend\\\\agri-ai\\\\src\\\\components\\\\CropRecommender.js\";\nimport React, { useState } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CropRecommender() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: `url(${process.env.PUBLIC_URL + 'assets/B2.jpg'})`\n      },\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__form_group\",\n        children: [predictionData.error && /*#__PURE__*/_jsxDEV(Alert, {\n          style: {\n            marginTop: \"20px\"\n          },\n          severity: \"error\",\n          children: [\" \", predictionData.error, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__title\",\n            children: \"Crop Recommender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => handleChange(e),\n          value: formData.N,\n          className: \"form__text_field\",\n          id: \"N\",\n          name: \"N\",\n          variant: \"filled\",\n          label: \"Amount of Nitrogen in Soil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => handleChange(e),\n          value: formData.P,\n          className: \"form__text_field\",\n          id: \"P\",\n          name: \"P\",\n          variant: \"filled\",\n          label: \"Amount of Phosphorous in Soil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => handleChange(e),\n          value: formData.K,\n          className: \"form__text_field\",\n          id: \"K\",\n          name: \"K\",\n          variant: \"filled\",\n          label: \"Amount of Pottasium in Soil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => handleChange(e),\n          value: formData.temperature,\n          className: \"form__text_field\",\n          id: \"temperature\",\n          name: \"temperature\",\n          variant: \"filled\",\n          label: \"Temperature (in Celcius)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => handleChange(e),\n          value: formData.humidity,\n          className: \"form__text_field\",\n          id: \"humidity\",\n          name: \"humidity\",\n          variant: \"filled\",\n          label: \"Humidity (in %)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => handleChange(e),\n          value: formData.ph,\n          className: \"form__text_field\",\n          id: \"ph\",\n          name: \"ph\",\n          variant: \"filled\",\n          label: \"pH value of Soil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => handleChange(e),\n          value: formData.rainfall,\n          className: \"form__text_field\",\n          id: \"rainfall\",\n          name: \"rainfall\",\n          variant: \"filled\",\n          label: \"Rainfall (in mm)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleClick(),\n          className: \"form__button\",\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Predict Crop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = CropRecommender;\nexport default CropRecommender;\n\nvar _c;\n\n$RefreshReg$(_c, \"CropRecommender\");","map":{"version":3,"sources":["D:/IIT/Subjects/DSGP Project/React/AgriAI_WebApp-main-2/AgriAI_WebApp-main/React_Frontend/agri-ai/src/components/CropRecommender.js"],"names":["React","useState","Button","TextField","Alert","CropRecommender","backgroundImage","process","env","PUBLIC_URL","predictionData","error","marginTop","e","handleChange","formData","N","P","K","temperature","humidity","ph","rainfall","handleClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,mBAAlC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;;AAGA,SAASC,eAAT,GAA2B;AAEtB,sBACG;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAE,OAAMC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,eAAgB;AAAjE,OAAZ;AAAkF,MAAA,SAAS,EAAC,WAA5F;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,mBAGQC,cAAc,CAACC,KAAf,iBACA,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAC;AAAX,WAAd;AAAkC,UAAA,QAAQ,EAAC,OAA3C;AAAA,0BAAsDF,cAAc,CAACC,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJR,eAOI;AAAA,iCAAQ;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAGE,CAAD,IAAOC,YAAY,CAACD,CAAD,CAAxC;AAA6C,UAAA,KAAK,EAAEE,QAAQ,CAACC,CAA7D;AAAgE,UAAA,SAAS,EAAC,kBAA1E;AAA6F,UAAA,EAAE,EAAC,GAAhG;AAAoG,UAAA,IAAI,EAAC,GAAzG;AAA6G,UAAA,OAAO,EAAC,QAArH;AAA8H,UAAA,KAAK,EAAC;AAApI;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAGH,CAAD,IAAOC,YAAY,CAACD,CAAD,CAAxC;AAA6C,UAAA,KAAK,EAAEE,QAAQ,CAACE,CAA7D;AAAgE,UAAA,SAAS,EAAC,kBAA1E;AAA6F,UAAA,EAAE,EAAC,GAAhG;AAAoG,UAAA,IAAI,EAAC,GAAzG;AAA6G,UAAA,OAAO,EAAC,QAArH;AAA8H,UAAA,KAAK,EAAC;AAApI;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAGJ,CAAD,IAAOC,YAAY,CAACD,CAAD,CAAxC;AAA6C,UAAA,KAAK,EAAEE,QAAQ,CAACG,CAA7D;AAAgE,UAAA,SAAS,EAAC,kBAA1E;AAA6F,UAAA,EAAE,EAAC,GAAhG;AAAoG,UAAA,IAAI,EAAC,GAAzG;AAA6G,UAAA,OAAO,EAAC,QAArH;AAA8H,UAAA,KAAK,EAAC;AAApI;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAGL,CAAD,IAAOC,YAAY,CAACD,CAAD,CAAxC;AAA6C,UAAA,KAAK,EAAEE,QAAQ,CAACI,WAA7D;AAA0E,UAAA,SAAS,EAAC,kBAApF;AAAuG,UAAA,EAAE,EAAC,aAA1G;AAAwH,UAAA,IAAI,EAAC,aAA7H;AAA2I,UAAA,OAAO,EAAC,QAAnJ;AAA4J,UAAA,KAAK,EAAC;AAAlK;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAYI,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAGN,CAAD,IAAOC,YAAY,CAACD,CAAD,CAAxC;AAA6C,UAAA,KAAK,EAAEE,QAAQ,CAACK,QAA7D;AAAuE,UAAA,SAAS,EAAC,kBAAjF;AAAoG,UAAA,EAAE,EAAC,UAAvG;AAAkH,UAAA,IAAI,EAAC,UAAvH;AAAkI,UAAA,OAAO,EAAC,QAA1I;AAAmJ,UAAA,KAAK,EAAC;AAAzJ;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAaI,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAGP,CAAD,IAAOC,YAAY,CAACD,CAAD,CAAxC;AAA6C,UAAA,KAAK,EAAEE,QAAQ,CAACM,EAA7D;AAAiE,UAAA,SAAS,EAAC,kBAA3E;AAA8F,UAAA,EAAE,EAAC,IAAjG;AAAsG,UAAA,IAAI,EAAC,IAA3G;AAAgH,UAAA,OAAO,EAAC,QAAxH;AAAiI,UAAA,KAAK,EAAC;AAAvI;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAcI,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAGR,CAAD,IAAOC,YAAY,CAACD,CAAD,CAAxC;AAA6C,UAAA,KAAK,EAAEE,QAAQ,CAACO,QAA7D;AAAuE,UAAA,SAAS,EAAC,kBAAjF;AAAoG,UAAA,EAAE,EAAC,UAAvG;AAAkH,UAAA,IAAI,EAAC,UAAvH;AAAkI,UAAA,OAAO,EAAC,QAA1I;AAAmJ,UAAA,KAAK,EAAC;AAAzJ;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAgBI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAIC,WAAW,EAAhC;AAAoC,UAAA,SAAS,EAAC,cAA9C;AAA6D,UAAA,KAAK,EAAC,SAAnE;AAA6E,UAAA,OAAO,EAAC,WAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADH;AAwBJ;;KA1BQlB,e;AA4BT,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Button, TextField } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\n\nfunction CropRecommender() {\n\n     return (\n        <div className=\"form\">\n            <div style={{backgroundImage:`url(${process.env.PUBLIC_URL + 'assets/B2.jpg'})`}} className=\"container\">\n                <div className=\"form__form_group\">\n\n                    {\n                        predictionData.error && \n                        <Alert style={{marginTop:\"20px\"}} severity=\"error\"> { predictionData.error } </Alert>\n                    }\n\n                    <center><div className=\"form__title\">Crop Recommender</div></center>\n                    <TextField onChange={(e) => handleChange(e)} value={formData.N} className=\"form__text_field\" id=\"N\" name=\"N\" variant=\"filled\" label=\"Amount of Nitrogen in Soil\" />\n                    <TextField onChange={(e) => handleChange(e)} value={formData.P} className=\"form__text_field\" id=\"P\" name=\"P\" variant=\"filled\" label=\"Amount of Phosphorous in Soil\" />\n                    <TextField onChange={(e) => handleChange(e)} value={formData.K} className=\"form__text_field\" id=\"K\" name=\"K\" variant=\"filled\" label=\"Amount of Pottasium in Soil\" />\n                    <TextField onChange={(e) => handleChange(e)} value={formData.temperature} className=\"form__text_field\" id=\"temperature\" name=\"temperature\" variant=\"filled\" label=\"Temperature (in Celcius)\" />\n                    <TextField onChange={(e) => handleChange(e)} value={formData.humidity} className=\"form__text_field\" id=\"humidity\" name=\"humidity\" variant=\"filled\" label=\"Humidity (in %)\" />\n                    <TextField onChange={(e) => handleChange(e)} value={formData.ph} className=\"form__text_field\" id=\"ph\" name=\"ph\" variant=\"filled\" label=\"pH value of Soil\" />\n                    <TextField onChange={(e) => handleChange(e)} value={formData.rainfall} className=\"form__text_field\" id=\"rainfall\" name=\"rainfall\" variant=\"filled\" label=\"Rainfall (in mm)\" />\n\n                    <Button onClick={()=>handleClick()} className=\"form__button\" color=\"primary\" variant=\"contained\">Predict Crop</Button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CropRecommender\n"]},"metadata":{},"sourceType":"module"}