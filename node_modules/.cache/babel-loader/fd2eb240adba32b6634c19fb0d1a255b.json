{"ast":null,"code":"var _jsxFileName = \"D:\\\\IIT\\\\Subjects\\\\DSGP Project\\\\React\\\\AgriAI_WebApp-main-2\\\\AgriAI_WebApp-main\\\\React_Frontend\\\\agri-ai\\\\src\\\\components\\\\CropRecommender.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport api from \"../api/recommenderapi\";\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport \"../styles/croprecommenderoutput.css\";\nimport { cropData } from \"./Data\";\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 550\n  },\n  table: {\n    minWidth: 450\n  }\n});\n\nfunction CropRecommender() {\n  _s();\n\n  const [formData, setFormData] = useState({\n    N: \"\",\n    P: \"\",\n    K: \"\",\n    temperature: \"\",\n    humidity: \"\",\n    ph: \"\",\n    rainfall: \"\"\n  });\n  const [predictionData, setPredictionData] = useState({});\n  const [loadingStatus, setLoadingStatus] = useState(false);\n\n  const handleChange = e => {\n    let newData = { ...formData\n    };\n    newData[e.target.id] = e.target.value;\n    setFormData(newData);\n  };\n\n  const handleClick = async () => {\n    setLoadingStatus(true);\n    const request = new FormData();\n\n    for (let key in formData) {\n      request.append(key, formData[key]);\n    }\n\n    const response = await api.post(\"/predict_crop\", request);\n    const responseData = response.data;\n    setPredictionData(responseData);\n    setLoadingStatus(false);\n  };\n\n  const handleBackClick = () => {\n    setPredictionData({});\n  };\n\n  const classes = useStyles();\n  const predictedCrop = cropData[predictionData.final_prediction];\n\n  if (predictionData.final_prediction) {\n    const outputComponent = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output_container\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: `${classes.root} output_container__card`,\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          alt: predictedCrop.title,\n          height: \"225\",\n          image: predictedCrop.imageUrl,\n          title: predictedCrop.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"h2\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Prediction: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), predictedCrop.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: predictedCrop.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: classes.table,\n              \"aria-label\": \"simple table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"XGBoost Model Prediction\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 78\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"RandomForest Model Prediction\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 78\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"KNN Model Prediction\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 78\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: [predictionData.xgb_model_prediction, \" (\", predictionData.xgb_model_probability, \"%)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: [predictionData.rf_model_prediction, \" (\", predictionData.rf_model_probability, \"%)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: [predictionData.knn_model_prediction, \" (\", predictionData.knn_model_probability, \"%)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleBackClick(),\n            className: \"back__button\",\n            variant: \"contained\",\n            size: \"small\",\n            color: \"primary\",\n            children: \"Back to Prediction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n\n    return outputComponent;\n  } else if (loadingStatus) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 16\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: `url(${process.env.PUBLIC_URL + 'assets/B2.jpg'})`\n      },\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__form_group\",\n        children: [predictionData.error && /*#__PURE__*/_jsxDEV(Alert, {\n          style: {\n            marginTop: \"20px\"\n          },\n          severity: \"error\",\n          children: [\" \", predictionData.error, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__title\",\n            children: \"Crop Recommender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => handleChange(e),\n          value: formData.N,\n          className: \"form__text_field\",\n          id: \"N\",\n          name: \"N\",\n          variant: \"filled\",\n          label: \"An Soil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => handleChange(e),\n          value: formData.P,\n          className: \"form__text_field\",\n          id: \"P\",\n          name: \"P\",\n          variant: \"filled\",\n          label: \"Amount of Phosphorous in Soil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => handleChange(e),\n          value: formData.K,\n          className: \"form__text_field\",\n          id: \"K\",\n          name: \"K\",\n          variant: \"filled\",\n          label: \"Amount of Pottasium in Soil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => handleChange(e),\n          value: formData.temperature,\n          className: \"form__text_field\",\n          id: \"temperature\",\n          name: \"temperature\",\n          variant: \"filled\",\n          label: \"Temperature (in Celcius)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => handleChange(e),\n          value: formData.humidity,\n          className: \"form__text_field\",\n          id: \"humidity\",\n          name: \"humidity\",\n          variant: \"filled\",\n          label: \"Humidity (in %)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => handleChange(e),\n          value: formData.ph,\n          className: \"form__text_field\",\n          id: \"ph\",\n          name: \"ph\",\n          variant: \"filled\",\n          label: \"pH value of Soil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => handleChange(e),\n          value: formData.rainfall,\n          className: \"form__text_field\",\n          id: \"rainfall\",\n          name: \"rainfall\",\n          variant: \"filled\",\n          label: \"Rainfall (in mm)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleClick(),\n          className: \"form__button\",\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Predict Crop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CropRecommender, \"tJeWosVvt9bKuL1++u2QNbXRKMg=\", false, function () {\n  return [useStyles];\n});\n\n_c = CropRecommender;\nexport default CropRecommender;\n\nvar _c;\n\n$RefreshReg$(_c, \"CropRecommender\");","map":{"version":3,"sources":["D:/IIT/Subjects/DSGP Project/React/AgriAI_WebApp-main-2/AgriAI_WebApp-main/React_Frontend/agri-ai/src/components/CropRecommender.js"],"names":["React","useState","Button","TextField","api","Alert","makeStyles","Card","CardActions","CardContent","CardMedia","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","cropData","Loading","useStyles","root","maxWidth","table","minWidth","CropRecommender","formData","setFormData","N","P","K","temperature","humidity","ph","rainfall","predictionData","setPredictionData","loadingStatus","setLoadingStatus","handleChange","e","newData","target","id","value","handleClick","request","FormData","key","append","response","post","responseData","data","handleBackClick","classes","predictedCrop","final_prediction","outputComponent","title","imageUrl","description","xgb_model_prediction","xgb_model_probability","rf_model_prediction","rf_model_probability","knn_model_prediction","knn_model_probability","backgroundImage","process","env","PUBLIC_URL","error","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button, TextField } from '@material-ui/core';\nimport api from \"../api/recommenderapi\"\nimport Alert from '@material-ui/lab/Alert';\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport \"../styles/croprecommenderoutput.css\"\nimport {cropData} from \"./Data\"\nimport Loading from './Loading';\n\n\n\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 550,\n    },\n    table: {\n        minWidth: 450,\n    },\n});\n\n\nfunction CropRecommender() {\n\n    const [formData, setFormData] = useState({\n        N:\"\",\n        P:\"\",\n        K:\"\",\n        temperature:\"\",\n        humidity:\"\",\n        ph:\"\",\n        rainfall:\"\"\n    })\n\n    const [predictionData, setPredictionData] = useState({})\n\n    const [loadingStatus, setLoadingStatus] = useState(false)\n\n    const handleChange = (e) => {\n        let newData = {...formData}\n        newData[e.target.id] = e.target.value\n        setFormData(newData)\n    }\n\n    const handleClick = async () => {\n\n        setLoadingStatus(true)\n        \n        const request = new FormData()\n\n        for(let key in formData) {\n            request.append(key, formData[key])\n        }\n\n        const response = await api.post(\n            \"/predict_crop\",\n            request\n        )\n        \n        const responseData = response.data\n        setPredictionData(responseData)\n        setLoadingStatus(false)\n    }\n\n    const handleBackClick = () => {\n        setPredictionData({})\n    }\n\n    const classes = useStyles();\n\n    const predictedCrop = cropData[predictionData.final_prediction]\n\n\n    if(predictionData.final_prediction) {\n\n\n        const outputComponent = (\n\n\n            <div className=\"output_container\">\n                <Card className={`${classes.root} output_container__card`}>\n                    {/* <CardActionArea> */}\n                        <CardMedia\n                        component=\"img\"\n                        alt={predictedCrop.title}\n                        height=\"225\"\n                        image={predictedCrop.imageUrl}\n                        title={predictedCrop.title}\n                        />\n                        <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            <b>Prediction: </b>{predictedCrop.title}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {predictedCrop.description}\n                        </Typography>\n                        <br/>\n    \n                        <TableContainer component={Paper}>\n                            <Table className={classes.table} aria-label=\"simple table\">\n                                <TableHead>\n                                <TableRow>\n                                    <TableCell component=\"th\" align=\"center\"><b>XGBoost Model Prediction</b></TableCell>\n                                    <TableCell component=\"th\" align=\"center\"><b>RandomForest Model Prediction</b></TableCell>\n                                    <TableCell component=\"th\" align=\"center\"><b>KNN Model Prediction</b></TableCell>\n                                </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell align=\"center\">{predictionData.xgb_model_prediction} ({predictionData.xgb_model_probability}%)</TableCell>\n                                        <TableCell align=\"center\">{predictionData.rf_model_prediction} ({predictionData.rf_model_probability}%)</TableCell>\n                                        <TableCell align=\"center\">{predictionData.knn_model_prediction} ({predictionData.knn_model_probability}%)</TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n    \n                        </CardContent>\n                    {/* </CardActionArea> */}\n                    <CardActions>\n                        <Button onClick={()=>handleBackClick()} className=\"back__button\" variant=\"contained\" size=\"small\" color=\"primary\">\n                        Back to Prediction\n                        </Button>\n                    </CardActions>\n                </Card>\n            </div>\n        )\n\n        return outputComponent\n    }\n\n\n    else if(loadingStatus) {\n\n        return <Loading />\n\n    }\n    else return (\n        <div className=\"form\">\n            <div style={{backgroundImage:`url(${process.env.PUBLIC_URL + 'assets/B2.jpg'})`}} className=\"container\">\n                <div className=\"form__form_group\">\n\n                    {\n                        predictionData.error && \n                        <Alert style={{marginTop:\"20px\"}} severity=\"error\"> { predictionData.error } </Alert>\n                    }\n\n                    <center><div className=\"form__title\">Crop Recommender</div></center>\n                    <TextField onChange={(e) => handleChange(e)} value={formData.N} className=\"form__text_field\" id=\"N\" name=\"N\" variant=\"filled\" label=\"An Soil\" />\n                    <TextField onChange={(e) => handleChange(e)} value={formData.P} className=\"form__text_field\" id=\"P\" name=\"P\" variant=\"filled\" label=\"Amount of Phosphorous in Soil\" />\n                    <TextField onChange={(e) => handleChange(e)} value={formData.K} className=\"form__text_field\" id=\"K\" name=\"K\" variant=\"filled\" label=\"Amount of Pottasium in Soil\" />\n                    <TextField onChange={(e) => handleChange(e)} value={formData.temperature} className=\"form__text_field\" id=\"temperature\" name=\"temperature\" variant=\"filled\" label=\"Temperature (in Celcius)\" />\n                    <TextField onChange={(e) => handleChange(e)} value={formData.humidity} className=\"form__text_field\" id=\"humidity\" name=\"humidity\" variant=\"filled\" label=\"Humidity (in %)\" />\n                    <TextField onChange={(e) => handleChange(e)} value={formData.ph} className=\"form__text_field\" id=\"ph\" name=\"ph\" variant=\"filled\" label=\"pH value of Soil\" />\n                    <TextField onChange={(e) => handleChange(e)} value={formData.rainfall} className=\"form__text_field\" id=\"rainfall\" name=\"rainfall\" variant=\"filled\" label=\"Rainfall (in mm)\" />\n\n                    <Button onClick={()=>handleClick()} className=\"form__button\" color=\"primary\" variant=\"contained\">Predict Crop</Button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CropRecommender\n"]},"metadata":{},"sourceType":"module"}